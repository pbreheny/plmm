% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv-plmm.R
\name{cv.plmm}
\alias{cv.plmm}
\title{Cross-validation for plmm}
\usage{
cv.plmm(
  X,
  y,
  K,
  type = c("response", "blup"),
  ...,
  cluster,
  nfolds = 10,
  seed,
  fold,
  returnY = FALSE,
  trace = FALSE
)
}
\arguments{
\item{X}{Design matrix for model fitting. May include clinical covariates and other non-SNP data. If this is the case, X_for_K should be supplied witha  matrix containing only SNP data for computation of GRM.}

\item{y}{Continuous outcome vector for model fitting.}

\item{K}{Known or estimated similarity matrix.}

\item{type}{A character argument indicating what should be returned from predict.plmm. If \code{type == 'response'} predictions are based on the linear predictor, \code{$X beta$}. If \code{type == 'blup'} predictions are based on the linear predictor plus the estimated random effect (BLUP). Defaults to 'response'.}

\item{...}{Additional arguments to plmm}

\item{cluster}{cv.plmm can be run in parallel across a cluster using the parallel package. The cluster must be set up in advance using the makeCluster function from that package. The cluster must then be passed to cv.plmm.}

\item{nfolds}{The number of cross-validation folds. Default is 10.}

\item{seed}{You may set the seed of the random number generator in order to obtain reproducible results.}

\item{fold}{Which fold each observation belongs to. By default the observations are randomly assigned.}

\item{returnY}{Should cv.plmm return the linear predictors from the cross-validation folds? Default is FALSE; if TRUE, this will return a matrix in which the element for row i, column j is the fitted value for observation i from the fold in which observation i was excluded from the fit, at the jth value of lambda.}

\item{trace}{If set to TRUE, inform the user of progress by announcing the beginning of each CV fold. Default is FALSE.}
}
\description{
Performs k-fold cross validation for lasso-, MCP-, or SCAD-penalized penalized linear mixed models over a grid of values for the regularization parameter lambda.
}
\examples{
cv_fit <- cv.plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X))

}
