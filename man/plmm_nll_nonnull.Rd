% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plmm_nll_nonnull.R
\name{plmm_nll_nonnull}
\alias{plmm_nll_nonnull}
\title{Evaluate the negative log-likelihood of a non-null Gaussian plmm model}
\usage{
plmm_nll_nonnull(fit, SUX, SUy, S, eta)
}
\arguments{
\item{fit}{An object of class plmm_fit.}

\item{SUX}{Rotated design matrix including rotated intercept and unpenalized columns, if present.}

\item{SUy}{Rotated outcome vector.}

\item{S}{Eigenvalues from similarity matrix used for model fitting.}

\item{eta}{Estimated $eta$ value from object fit.}
}
\description{
Evaluate the negative log-likelihood of a non-null Gaussian plmm model
}
\examples{
admix$K <- (1/nrow(admix$X))*tcrossprod(admix$X, admix$X) # create an estimated covariance matrix 
# NB: this is an estimate of K 
K_svd <- svd(K)
U <- K_svd$u
D <- K_svd$d
# WORK IN PROGRESS #FIXME need to iron out this example
# See pp. 16-18 in A.R.'s thesis 
ev <- eigen(admix$V)
U <- ev$vectors
S <- ev$values
UX <- U\%*\%admix$X
Uy <- U\%*\%admix$y
fit <- plmm(X = admix$X, y = admix$y, V = admix$V, penalty = "MCP")
(plmm_nll_nonnull(fit = my_fit, SUX = S\%*\%UX, SUy = S\%*\%admix$y, S = S, eta = my_fit$eta))
}
