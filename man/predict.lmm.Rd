% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict-lmm.R
\name{predict.lmm}
\alias{predict.lmm}
\title{Predict method for lmm class}
\usage{
\method{predict}{lmm}(object, newX, type = c("lp", "coefficients", "blup"), X, y, ...)
}
\arguments{
\item{object}{An object of class \code{plmm}.}

\item{newX}{Design matrix used for computing predicted values if requested.}

\item{type}{A character argument indicating what type of prediction should be returned. Options are "lp," "coefficients," "vars," "nvars," and "blup." See details.}

\item{X}{Optional argument. Original design matrix (not including intercept column) from object. Required if \code{type == 'blup'} and object is too large to be returned in \code{plmm} object.}

\item{y}{Optional argument. Original continuous outcome vector from object. Required if \code{type == 'blup'}.}

\item{...}{Additional optional arguments}
}
\description{
Predict method for lmm class
}
\details{
Define beta-hat as the coefficients estimated at the value of lambda that minimizes cross-validation error (CVE). Then options for \code{type} are as follows:
\itemize{
\item 'lp' (default): uses the product of newX and beta-hat to predict new values of the outcome. This does not incorporate the correlation structure of the data.
For the stats folks out there, this is simply the linear predictor.
\item 'blup' (acronym for Best Linear Unbiased Predictor): adds to the 'response' a value that represents the esetimated random effect. This addition is a way of incorporating
the estimated correlation structure of data into our prediction of the outcome.
\item 'coefficients': returns the estimated beta-hat
}
}
\examples{
\dontrun{
# fit a model 
fit <- lmm(X = pedigree$X, y = pedigree$clinical$y)
predict.lmm(fit, type = "coefficients")
predict.lmm(fit, type = "lp", newX = pedigree$X)
predict.lmm(fit, type = "blup", X = pedigree$X, newX = pedigree$X, y = pedigree$clinical$y)
}

}
