[{"path":"/articles/getting_started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with penalizedLMM","text":"penalizedLMM R package created purpose fitting penalized regression models high dimensional data, particularly observations independent. kind data arises often context genetics (e.g. GWAS dealing population structure), motivation examples presented . time, package designed linear regression – , considering continuous (numeric) outcomes. future, like extend package handle logistic regression (handle dichotomous outcomes). Since focused penalized regression package, penalizedLMM offers 3 choices penalty: minimax concave (MCP), smoothly clipped absolute deviation (SCAD), least absolute shrinkage selection operator (LASSO). Much work package built concepts/techniques provided ncvreg package, whose author thesis advisor. penalizedLMM currently includes two example data sets: admix small data set (197 observations, 100 SNPs) describes individuals different racial backgrounds. outcome admix simulated include population structure effects (.e. race/ethnicity impact SNP associations). cad_lite (acronym coronary artery disease) lower mid-sized data set (1401 observations, 4217 SNPs) several health outcomes well age sex information. data set subset much larger data set (original data 800K SNPs). information data set, refer original publication. cad (acronym coronary artery disease) upper mid-sized data set (1401 observations, 42117 SNPs) several health outcomes well age sex information. data set larger subset data used reference cad_lite. overview, provide demo main functions penalizedLMM using data sets.","code":""},{"path":"/articles/getting_started.html","id":"basic-model-fitting","dir":"Articles","previous_headings":"","what":"Basic model fitting","title":"Getting started with penalizedLMM","text":"admix data already formatted \\(X\\) \\(y\\), can jump right call plmm: cad_lite data bed/bim/fam format, need preprocessing first: Now data processed, can fit model. Notice returned plmm object include \\(X\\) matrix; noted warning, matrix returned due large size. returned beta_vals item matrix whose rows \\(\\beta\\) coefficients whose columns represent values penalization parameter \\(\\lambda\\). default, plmm fits 100 values \\(\\lambda\\) (see setup_lambda function details). can summarize fit 25th \\(\\lambda\\) value: Notice large number SNPs constant features – , SNPs whose values vary among members population. features, value \\(\\beta=0\\) returned values \\(\\lambda\\). order make model run reasonable amount time laptop (2015 MacBook Pro), going re-run model additional argument \\(k\\). \\(k\\) specified package RSpectra installed, singular value decomposition algorithm RSpectra::svds(k, ...) – efficient. Notice cad_lite_fit2 object include \\(X\\) matrix – use \\(k\\) reduced returned matrix size < 100 Mb. Let’s summarize new fit: TODO: examine one nonzero \\(\\beta\\) value returned second summary call.","code":"admix_fit <- plmm(X = admix$X, y = admix$y) summary(admix_fit, lambda = admix_fit$lambda[95]) # MCP-penalized regression model with n=197, p=101 at lambda=0.00048 # ------------------------------------------------- # The model converged  # ------------------------------------------------- # # of non-zero coefficients:  98  # Constant features (features without variation):  Snp8 Snp14  # ------------------------------------------------- cad_lite <- process_plink(prefix = \"cad\",                           dataDir = plink_example(path=\"cad.fam\", parent=T)) #  # Preprocessing cad data: #  # Removing  1346 SNPs that are monomorphic or outside of chromosomes 1-22. #  # There are 34140 SNPs with missing data that we will attempt to impute. # SNPs tagged by a single SNP: 15366 # SNPs tagged by multiple tag haplotypes (saturated model): 26817 #  # There are 15011 SNPs with missing data after imputation. #  # Of these SNPs, 66 have call rates <= 50% and will be removed. #  # There are 14945 SNPs that still have missing data which will be imputed with the HWE expected value. #  # Preprocessing cad data DONE! #   # Subjects: 1401  # SNPs: 42117  # Missing values: 0 # NB: there is a 'quiet' option in process_plink() that will silence the printed messages  cad_clinical <- read.csv(plink_example(path=\"cad_clinical.csv\"))  # for the sake of illustration, I use a simple mean imputation for the outcome  cad_clinical$hdl_impute <- ifelse(is.na(cad_clinical$hdl),                                        mean(cad_clinical$hdl, na.rm = T),                                        cad_clinical$hdl) cad_lite_fit <- plmm(X = cad_lite$genotypes, y = cad_clinical$hdl_impute,                      trace = TRUE) # Passed all checks. Beginning standardization + rotation. # Standardization + rotation complete. Beginning model fitting. # Fitting model with lambda #1 # Fitting model with lambda #2 # Fitting model with lambda #3 # Fitting model with lambda #4 # Fitting model with lambda #5 # Fitting model with lambda #6 # Fitting model with lambda #7 # Fitting model with lambda #8 # Fitting model with lambda #9 # Fitting model with lambda #10 # Fitting model with lambda #11 # Fitting model with lambda #12 # Fitting model with lambda #13 # Fitting model with lambda #14 # Fitting model with lambda #15 # Fitting model with lambda #16 # Fitting model with lambda #17 # Fitting model with lambda #18 # Fitting model with lambda #19 # Fitting model with lambda #20 # Fitting model with lambda #21 # Fitting model with lambda #22 # Fitting model with lambda #23 # Fitting model with lambda #24 # Fitting model with lambda #25 # Fitting model with lambda #26 # Fitting model with lambda #27 # Fitting model with lambda #28 # Fitting model with lambda #29 # Fitting model with lambda #30 # Fitting model with lambda #31 # Fitting model with lambda #32 # Fitting model with lambda #33 # Fitting model with lambda #34 # Fitting model with lambda #35 # Fitting model with lambda #36 # Fitting model with lambda #37 # Fitting model with lambda #38 # Fitting model with lambda #39 # Fitting model with lambda #40 # Fitting model with lambda #41 # Fitting model with lambda #42 # Fitting model with lambda #43 # Fitting model with lambda #44 # Fitting model with lambda #45 # Fitting model with lambda #46 # Fitting model with lambda #47 # Fitting model with lambda #48 # Fitting model with lambda #49 # Fitting model with lambda #50 # Fitting model with lambda #51 # Fitting model with lambda #52 # Fitting model with lambda #53 # Fitting model with lambda #54 # Fitting model with lambda #55 # Fitting model with lambda #56 # Fitting model with lambda #57 # Fitting model with lambda #58 # Fitting model with lambda #59 # Fitting model with lambda #60 # Fitting model with lambda #61 # Fitting model with lambda #62 # Fitting model with lambda #63 # Fitting model with lambda #64 # Fitting model with lambda #65 # Fitting model with lambda #66 # Fitting model with lambda #67 # Fitting model with lambda #68 # Fitting model with lambda #69 # Fitting model with lambda #70 # Fitting model with lambda #71 # Fitting model with lambda #72 # Fitting model with lambda #73 # Fitting model with lambda #74 # Fitting model with lambda #75 # Fitting model with lambda #76 # Fitting model with lambda #77 # Fitting model with lambda #78 # Fitting model with lambda #79 # Fitting model with lambda #80 # Fitting model with lambda #81 # Fitting model with lambda #82 # Fitting model with lambda #83 # Fitting model with lambda #84 # Fitting model with lambda #85 # Fitting model with lambda #86 # Fitting model with lambda #87 # Fitting model with lambda #88 # Fitting model with lambda #89 # Fitting model with lambda #90 # Fitting model with lambda #91 # Fitting model with lambda #92 # Fitting model with lambda #93 # Fitting model with lambda #94 # Fitting model with lambda #95 # Fitting model with lambda #96 # Fitting model with lambda #97 # Fitting model with lambda #98 # Fitting model with lambda #99 # Fitting model with lambda #100 # Beta values are estimated -- almost done! # Warning in plmm(X = cad_lite$genotypes, y = cad_clinical$hdl_impute, trace = TRUE): Due to the large size of SUX (>100 Mb), returnX has been turned off. # To turn this message off, explicitly specify returnX=TRUE or returnX=FALSE). names(cad_lite_fit) #  [1] \"beta_vals\"      \"eta\"            \"lambda\"         \"penalty\"        #  [5] \"gamma\"          \"alpha\"          \"convex.min\"     \"loss\"           #  [9] \"penalty.factor\" \"n\"              \"ns_idx\"         \"iter\"           # [13] \"converged\" summary(cad_lite_fit, lambda = cad_lite_fit$lambda[25]) # MCP-penalized regression model with n=1401, p=42118 at lambda=0.7809 # ------------------------------------------------- # The model converged  # ------------------------------------------------- # # of non-zero coefficients:  151  # Number of constant features (features without variation):  40609  # ------------------------------------------------- cad_lite_fit2 <- plmm(X = cad_lite$genotypes, y = cad_clinical$hdl_impute, k = 5) names(cad_lite_fit2) #  [1] \"beta_vals\"      \"eta\"            \"lambda\"         \"penalty\"        #  [5] \"gamma\"          \"alpha\"          \"convex.min\"     \"loss\"           #  [9] \"penalty.factor\" \"n\"              \"ns_idx\"         \"iter\"           # [13] \"converged\"      \"X\"              \"y\"              \"std_X\"          # [17] \"U\"              \"S\"              \"SUX\"            \"SUy\" summary(cad_lite_fit2, lambda = cad_lite_fit2$lambda[25]) # MCP-penalized regression model with n=1401, p=42118 at lambda=6.6468 # ------------------------------------------------- # The model converged  # ------------------------------------------------- # # of non-zero coefficients:  1  # Number of constant features (features without variation):  42116  # -------------------------------------------------"},{"path":"/articles/getting_started.html","id":"cross-validation","dir":"Articles","previous_headings":"","what":"Cross validation","title":"Getting started with penalizedLMM","text":"select \\(\\lambda\\) value, often use cross validation. example using cv.plmm select \\(\\lambda\\) minimizes cross-validation error: TODO: figure error: ‘Warning (type == “blup”) { : condition length > 1 first element used’ see work cad_lite data, can use lines :","code":"# FIXME: fix the warning issue  admix_cv <- cv.plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X))   admix_cv_s <- summary.cv.plmm(admix_cv, lambda = '1se') print.summary.cv.plmm(admix_cv_s) # MCP-penalized model with n=197 # At minimum cross-validation error (lambda=0.0908): # ------------------------------------------------- #   Nonzero coefficients: 26 #   Cross-validation error (deviance): 2.42 #   Scale estimate (sigma): 1.557 # FIXME: this is taking several minutes -- need to come back here  cad_lite_cv <- cv.plmm(X = cad_lite$genotypes,                         y = cad_clinical$hdl_impute,                        K = relatedness_mat(cad_lite$genotypes),                        trace = TRUE)  print.summary.cv.plmm(summary.cv.plmm(cad_lite_cv, lambda = \"1se\"))"},{"path":"/articles/getting_started.html","id":"plots","dir":"Articles","previous_headings":"","what":"Plots","title":"Getting started with penalizedLMM","text":"","code":"plot(admix_fit)"},{"path":"/articles/getting_started.html","id":"predicted-values","dir":"Articles","previous_headings":"","what":"Predicted values","title":"Getting started with penalizedLMM","text":"","code":"# simulate new data  admix_newX <- sim_ps_x(n = nrow(admix$X), nJ = 4, p = ncol(admix$X),   structureX = \"independent\", inbr = \"heterogeneous\", standardizeX = FALSE)  # make predictions for a select number of lambda values admix_pred1 <- predict(object = admix_fit, newX = admix_newX, type = \"response\", idx=98)  # make prediction using blup  admix_pred2 <- predict(object = admix_fit, newX = admix_newX, type = \"blup\", idx=98) # Warning in predict.plmm(object = admix_fit, newX = admix_newX, type = \"blup\", : # The BLUP option is under development. Rely on these estimates at your own risk.  # compare y predictions  admix_compare_y <- data.frame(y = admix$y, yhat_response = admix_pred1, yhat_blup = admix_pred2)  (admix_compare_y) #                y yhat_response    X0.00039 # 1    2.821334577   -1.64162741 -1.64161707 # 2    1.333134654   -1.29908533 -1.29907935 # 3    2.129287735   -0.89341581 -0.89341717 # 4    3.715064987   -1.25554130 -1.25554646 # 5    1.723542469   -3.65745455 -3.65745143 # 6    0.734938765    0.31008624  0.31008930 # 7    1.313147148   -1.67206875 -1.67206476 # 8    0.816964293   -2.13692300 -2.13692452 # 9    3.224081797   -1.15945580 -1.15945142 # 10   1.622440090   -3.72069227 -3.72069235 # 11   2.410872461   -2.64024382 -2.64023635 # 12   1.373308979   -3.74670523 -3.74670645 # 13   0.716886138   -6.65041079 -6.65040821 # 14   3.786913137   -1.13621970 -1.13621712 # 15   1.023103003   -1.86272607 -1.86273022 # 16  -0.703990894   -1.04422966 -1.04422550 # 17   2.701355902   -3.40188342 -3.40188457 # 18   0.789834855   -2.30182588 -2.30183012 # 19   0.942277304   -5.11711494 -5.11711998 # 20   1.054752358   -0.68679301 -0.68679211 # 21   0.984096562   -4.42632136 -4.42632435 # 22   1.271108771   -2.74136718 -2.74136376 # 23   0.637586995   -6.26696448 -6.26696322 # 24   0.333508709   -1.64827740 -1.64827936 # 25   2.847888055   -3.83658399 -3.83658683 # 26   2.153373118   -2.33211814 -2.33211717 # 27   0.124489326   -2.79586457 -2.79586342 # 28   2.516441184   -5.88925227 -5.88925014 # 29   2.426464221    0.30909806  0.30909710 # 30   1.704928517   -2.27018520 -2.27018718 # 31   2.895125661   -0.73070156 -0.73069555 # 32   2.878133488   -1.73147121 -1.73146740 # 33   2.084207344    2.01165026  2.01165739 # 34   2.688640254   -6.01912442 -6.01912500 # 35   1.816543916   -1.97532343 -1.97531637 # 36   1.200714552   -1.49255239 -1.49254603 # 37   0.956663599   -2.90348145 -2.90347894 # 38   1.619528999    1.19619584  1.19619758 # 39   1.315394031   -3.13808463 -3.13809274 # 40   1.054708985   -3.43688130 -3.43687947 # 41  -0.740143826   -2.39816133 -2.39816717 # 42   3.441683238   -3.38420816 -3.38420939 # 43   3.218063008   -0.44484370 -0.44484220 # 44   0.876891417   -0.76416825 -0.76416966 # 45   0.859741427   -0.97069251 -0.97068407 # 46   1.533344646   -0.95089262 -0.95090277 # 47   2.790066128   -3.38136995 -3.38137991 # 48  -0.820742804   -1.54758570 -1.54758671 # 49  -0.484055223   -0.80984045 -0.80983954 # 50  -0.018445745   -1.82255710 -1.82256264 # 51  -0.780244195    0.16636178  0.16636095 # 52  -0.106145191    1.19125054  1.19125845 # 53  -0.215669976    0.34378760  0.34378645 # 54   1.526571615    2.77436016  2.77435518 # 55  -1.528550784   -0.86429554 -0.86429474 # 56   0.584613750   -3.52384730 -3.52384355 # 57   0.144056264   -4.54509521 -4.54508703 # 58   0.236143589   -0.54413439 -0.54413968 # 59  -0.357734255   -1.69203098 -1.69202277 # 60  -1.239697190   -0.92125221 -0.92125937 # 61  -0.333207384   -2.92884965 -2.92885834 # 62  -1.008474373    2.53565467  2.53565344 # 63  -1.799063954   -1.21105938 -1.21105739 # 64  -0.433845096    0.96722087  0.96721952 # 65  -0.279062949   -2.26786948 -2.26786390 # 66  -1.401541228   -0.09615146 -0.09614916 # 67   0.184893731   -2.83418208 -2.83418333 # 68   1.322811958   -2.32059092 -2.32058446 # 69  -1.955677631   -3.48743476 -3.48742927 # 70  -3.036441603   -0.61729810 -0.61728986 # 71   1.015839535   -2.12958804 -2.12958591 # 72  -1.446574500   -3.55198089 -3.55197779 # 73  -0.688008616   -3.14238843 -3.14238750 # 74   0.288197632   -4.28225127 -4.28225350 # 75  -0.274671997   -2.54343443 -2.54344499 # 76  -1.947990440   -2.55068556 -2.55068930 # 77  -0.535868237   -4.35913723 -4.35913801 # 78  -1.593436817   -4.69310249 -4.69309960 # 79  -0.721508541   -2.65630703 -2.65629621 # 80   0.395381411   -1.45765974 -1.45766330 # 81  -1.845407507   -0.64701875 -0.64701765 # 82   0.654477559   -2.77197359 -2.77196937 # 83  -0.947759289   -4.22911722 -4.22911017 # 84  -1.142965511   -2.01550484 -2.01551381 # 85   0.359465276   -0.31132659 -0.31132799 # 86  -1.029464974   -2.69828723 -2.69829828 # 87  -1.063305323   -4.41498488 -4.41498581 # 88   0.411433881   -0.22147859 -0.22147314 # 89   0.266231129   -1.34898921 -1.34898956 # 90  -0.916249505    0.17246927  0.17247072 # 91   0.258933755   -3.63540625 -3.63540952 # 92  -1.355178803   -1.90339556 -1.90339624 # 93   0.623278711   -3.36238067 -3.36237653 # 94  -1.327532314   -2.36538191 -2.36538611 # 95   0.712585518   -3.13150855 -3.13150648 # 96   0.805337899   -1.35780166 -1.35780459 # 97  -1.700346824   -3.57434745 -3.57434689 # 98  -4.016319890   -2.37203156 -2.37203330 # 99  -4.427578281   -1.25144739 -1.25144956 # 100 -2.733015281   -1.59427091 -1.59427617 # 101 -3.226489858   -1.31065718 -1.31065881 # 102 -4.074815327   -5.84213975 -5.84214274 # 103 -4.688992305   -1.46835127 -1.46834273 # 104 -4.509674189   -3.64618706 -3.64618649 # 105 -4.512177197   -0.72545013 -0.72544257 # 106 -5.385113654    1.82983359  1.82983309 # 107 -4.107499248   -2.16272986 -2.16273264 # 108 -2.808276118   -1.99470776 -1.99470908 # 109 -3.575346963   -1.27392118 -1.27392477 # 110 -3.129409415   -2.16016218 -2.16016100 # 111 -4.617882708   -1.20094139 -1.20094635 # 112 -3.792935703   -1.42306761 -1.42306533 # 113 -3.217966533   -4.26734454 -4.26734116 # 114 -2.688745628    0.12435754  0.12435134 # 115 -3.631697543   -1.59892973 -1.59892337 # 116 -4.378079746   -3.56193311 -3.56193183 # 117 -4.576977073    0.47751665  0.47751191 # 118 -4.751401518   -1.07123457 -1.07123741 # 119 -2.882353403   -0.59111147 -0.59110947 # 120 -3.937373604   -0.31029050 -0.31028870 # 121 -4.227931181   -1.07759803 -1.07760009 # 122 -3.983364919   -2.69695917 -2.69696115 # 123 -2.620784459    1.05888306  1.05888363 # 124 -3.651949902   -1.61545669 -1.61545588 # 125 -4.239360902   -1.80667639 -1.80667536 # 126 -2.911938140   -0.11858768 -0.11859654 # 127 -5.416402089   -1.45162920 -1.45162783 # 128 -4.546055561   -1.79082247 -1.79081700 # 129 -1.545348131    1.75825714  1.75826463 # 130 -2.528293927   -0.25925650 -0.25925543 # 131 -4.433514553    0.46920499  0.46921114 # 132 -3.422496832   -2.72075879 -2.72076359 # 133 -5.790620959   -1.83856838 -1.83856082 # 134 -2.606036524   -3.07393257 -3.07392910 # 135 -5.925286536   -1.47430221 -1.47430238 # 136 -2.260052489   -1.25169183 -1.25169088 # 137 -2.565643906   -3.01254508 -3.01254730 # 138 -4.443893161   -1.69277626 -1.69277057 # 139 -3.762862129   -1.66237147 -1.66236515 # 140 -3.262197489   -3.00288361 -3.00287975 # 141 -5.299416886   -1.60763031 -1.60763493 # 142 -4.514667654   -3.30600004 -3.30599472 # 143 -5.328808901   -0.92224530 -0.92224228 # 144 -4.985451977   -1.83482524 -1.83482987 # 145 -5.189028312   -1.20245705 -1.20245588 # 146 -2.301982217    0.35343173  0.35343450 # 147 -1.627163787   -1.16293451 -1.16293577 # 148  0.712969524    0.26618046  0.26616878 # 149  2.787738847   -3.84625777 -3.84625588 # 150  2.031668504   -1.97864730 -1.97865732 # 151  1.594828842   -3.00486752 -3.00487095 # 152  0.264350664   -2.72209473 -2.72208925 # 153  1.880547393    0.66610891  0.66610587 # 154  1.002432948   -4.29541211 -4.29541312 # 155  2.562989533    1.05975412  1.05974531 # 156  1.627561244   -1.44744719 -1.44745331 # 157  2.239599649   -0.62766476 -0.62766124 # 158  1.635520152   -1.64723217 -1.64723551 # 159  3.052711466   -3.43114638 -3.43114827 # 160  0.950822993   -0.06229771 -0.06229748 # 161  0.002471018   -1.84726375 -1.84725758 # 162  5.251140945   -2.68143324 -2.68143439 # 163  1.583142412   -0.38301589 -0.38302757 # 164  1.560853854   -0.79436628 -0.79436725 # 165  1.909296947   -2.22496414 -2.22496462 # 166  1.516219374   -3.49140352 -3.49141253 # 167  2.526963054   -3.68815947 -3.68815723 # 168  2.368964527    0.91109493  0.91109884 # 169  1.784619492    0.58271520  0.58271232 # 170  2.065293034    0.09614906  0.09614476 # 171  1.965932746   -3.11602368 -3.11602851 # 172  2.663805434    0.35578470  0.35578987 # 173  1.258663904   -4.36774808 -4.36774876 # 174  0.176731006   -1.01724149 -1.01724157 # 175  2.037788399    0.51447239  0.51446065 # 176  1.573107012    1.92652367  1.92653112 # 177  1.699149742    1.62563002  1.62562843 # 178  1.551735677   -1.21657943 -1.21658388 # 179  0.936673866    0.07908000  0.07906703 # 180  3.263185176   -0.87181517 -0.87180799 # 181  1.650349612   -1.92862160 -1.92862240 # 182  1.134487137   -1.39451087 -1.39450867 # 183  1.763720431   -4.03581773 -4.03581604 # 184  1.065450368   -0.07742859 -0.07742745 # 185  2.372546552   -1.98428770 -1.98428417 # 186  2.084737292    0.33728024  0.33728439 # 187  2.754053785   -3.71412505 -3.71412700 # 188  0.763334245   -3.94914469 -3.94913899 # 189  2.214445310    0.66624287  0.66624404 # 190  1.675314089   -3.79927428 -3.79926987 # 191  2.094583528   -3.21767138 -3.21767614 # 192  1.104636642   -2.39435299 -2.39436140 # 193  0.689198467   -2.38189986 -2.38190243 # 194  3.269940657   -3.16575700 -3.16575977 # 195  2.600708824    0.26579760  0.26579383 # 196  0.748728638   -3.27688760 -3.27688457 # 197  0.651460346   -1.49672456 -1.49672415  # FIXME: why are my predictions so off? Something is wrong in predict.plmm().... # make predictions when X is bigger cad_X <- cad_lite$genotypes cad_y <- cad_clinical$hdl_impute  cad_lite_newX <- sim_ps_x(n = nrow(cad_X), nJ = 4, p = ncol(cad_X),   structureX = \"independent\", inbr = \"heterogeneous\", standardizeX = FALSE)  cad_lite_pred <- predict(object = cad_lite_fit,                          newX = cad_lite_newX,                          type='blup',                          idx = 95,                          # for BLUP prediction method, must supply X and y                          X = cad_X,                          y = cad_y)  # compare the observed and predicted values  head(data.frame(cad_y, cad_lite_pred))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anna C. Reisetter. Author, maintainer. Patrick J. Breheny. Author. Tabitha K. Peter. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reisetter , Breheny P (2022). penalizedLMM: Fit nonconvex-penalized linear mixed models account presence unobserved confounding effects. R package version 0.2.0.","code":"@Manual{,   title = {penalizedLMM: Fit nonconvex-penalized linear mixed models to account for the presence of unobserved confounding effects},   author = {Anna C. Reisetter and Patrick J. Breheny},   year = {2022},   note = {R package version 0.2.0}, }"},{"path":"/index.html","id":"welcome","dir":"","previous_headings":"","what":"Welcome","title":"Fit nonconvex-penalized linear mixed models to account for the presence of unobserved confounding effects","text":"penalizedLMM package contains functions fit penalized linear mixed models correct unobserved confounding effects. Documentation package progress.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit nonconvex-penalized linear mixed models to account for the presence of unobserved confounding effects","text":"install latest version package: description motivation functions package (along examples) refer second module GWAS data tutorial","code":"devtools::install_github(\"areisett/penalizedLMM\")"},{"path":"/reference/admix.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi-simulated SNP data — admix","title":"Semi-simulated SNP data — admix","text":"dataset containing 100 SNPs, demographic variable representing race, simulated outcome","code":""},{"path":"/reference/admix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi-simulated SNP data — admix","text":"","code":"admix"},{"path":"/reference/admix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Semi-simulated SNP data — admix","text":"list 3 components X SNP matrix (197 observations 100 SNPs) y vector simulated (continuous) outcomes race vector racial group categorization","code":""},{"path":"/reference/admix.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Semi-simulated SNP data — admix","text":"https://hastie.su.domains/CASI/","code":""},{"path":"/reference/coef.cv.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Coef method for ","title":"Coef method for ","text":"Coef method \"cv.plmm\" class","code":""},{"path":"/reference/coef.cv.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coef method for ","text":"","code":"# S3 method for cv.plmm coef(object, lambda, which = object$min, ...)"},{"path":"/reference/coef.cv.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coef method for ","text":"object object class \"cv.plmm.\" lambda numeric vector lambda values. Vector lambda indices coefficients return. Defaults lambda index minimum CVE. ... Additional arguments.","code":""},{"path":"/reference/coef.cv.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coef method for ","text":"","code":"cv_fit <- cv.plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used head(coef.cv.plmm(cv_fit)) #> Error in coef.cv.plmm(cv_fit): could not find function \"coef.cv.plmm\""},{"path":"/reference/coef.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Coef method for ","title":"Coef method for ","text":"Coef method \"plmm\" class","code":""},{"path":"/reference/coef.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coef method for ","text":"","code":"# S3 method for plmm coef(object, lambda, which = 1:length(object$lambda), drop = TRUE, ...)"},{"path":"/reference/coef.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coef method for ","text":"object object class \"plmm.\" lambda numeric vector lambda values. Vector lambda indices coefficients return. drop Logical. ... Additional arguments.","code":""},{"path":"/reference/coef.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coef method for ","text":"","code":"fit <- plmm(admix$X, admix$y) (coef.plmm(fit)[1:10, 1:5]) #> Error in coef.plmm(fit): could not find function \"coef.plmm\""},{"path":"/reference/coerce_snpmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce SnpMatrix: a function to convert a SnpMatrix object into a matrix of numeric values — coerce_snpmatrix","title":"Coerce SnpMatrix: a function to convert a SnpMatrix object into a matrix of numeric values — coerce_snpmatrix","text":"Coerce SnpMatrix: function convert SnpMatrix object matrix numeric values","code":""},{"path":"/reference/coerce_snpmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce SnpMatrix: a function to convert a SnpMatrix object into a matrix of numeric values — coerce_snpmatrix","text":"","code":"coerce_snpmatrix(snpmatrix)"},{"path":"/reference/coerce_snpmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce SnpMatrix: a function to convert a SnpMatrix object into a matrix of numeric values — coerce_snpmatrix","text":"snpmatrix object class \"SnpMatrix\", defined snpStats package.","code":""},{"path":"/reference/coerce_snpmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce SnpMatrix: a function to convert a SnpMatrix object into a matrix of numeric values — coerce_snpmatrix","text":"matrix numeric values","code":""},{"path":"/reference/coerce_snpmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce SnpMatrix: a function to convert a SnpMatrix object into a matrix of numeric values — coerce_snpmatrix","text":"","code":"if (FALSE) { cad <- process_plink(prefix = \"cad\", dataDir = plink_example(path=\"cad.fam\", parent=T)) X <- coerce_snpmatrix(cad$genotypes) }"},{"path":"/reference/convexMin.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate index for which objective function ceases to be locally convex — convexMin","title":"Calculate index for which objective function ceases to be locally convex — convexMin","text":"Calculate index objective function ceases locally convex","code":""},{"path":"/reference/convexMin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate index for which objective function ceases to be locally convex — convexMin","text":"","code":"convexMin(b, X, penalty, gamma, l2, family = \"gaussian\", penalty.factor)"},{"path":"/reference/convexMin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate index for which objective function ceases to be locally convex — convexMin","text":"b Matrix coefficient values. X Design matrix. penalty penalty applied model. Either \"MCP\", \"SCAD\", \"lasso\". gamma tuning parameter MCP/SCAD penalty. Default 3 MCP 3.7 SCAD. l2 L2. family \"gaussian\" currently supported. penalty.factor multiplicative factor penalty applied coefficient. supplied, penalty.factor must numeric vector length equal number columns X. purpose penalty.factor apply differential penalization coefficients thought likely others model. particular, penalty.factor can 0, case coefficient always model without shrinkage.","code":""},{"path":"/reference/cv.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation for plmm — cv.plmm","title":"Cross-validation for plmm — cv.plmm","text":"Performs k-fold cross validation lasso-, MCP-, SCAD-penalized penalized linear mixed models grid values regularization parameter lambda.","code":""},{"path":"/reference/cv.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation for plmm — cv.plmm","text":"","code":"cv.plmm(   X,   y,   K,   type = c(\"response\", \"blup\"),   ...,   cluster,   nfolds = 10,   seed,   fold,   returnY = FALSE,   trace = FALSE )"},{"path":"/reference/cv.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation for plmm — cv.plmm","text":"X Design matrix model fitting. May include clinical covariates non-SNP data. case, X_for_K supplied witha  matrix containing SNP data computation GRM. y Continuous outcome vector model fitting. K Known estimated similarity matrix. type character argument indicating returned predict.plmm. type == 'response' predictions based linear predictor, $X beta$. type == 'blup' predictions based linear predictor plus estimated random effect (BLUP). Defaults 'response'. ... Additional arguments plmm cluster cv.plmm can run parallel across cluster using parallel package. cluster must set advance using makeCluster function package. cluster must passed cv.plmm. nfolds number cross-validation folds. Default 10. seed may set seed random number generator order obtain reproducible results. fold fold observation belongs . default observations randomly assigned. returnY cv.plmm return linear predictors cross-validation folds? Default FALSE; TRUE, return matrix element row , column j fitted value observation fold observation excluded fit, jth value lambda. trace set TRUE, inform user progress announcing beginning CV fold. Default FALSE.","code":""},{"path":"/reference/cv.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validation for plmm — cv.plmm","text":"","code":"cv_fit <- cv.plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used"},{"path":"/reference/cvf.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation internal function for cv.plmm — cvf","title":"Cross-validation internal function for cv.plmm — cvf","text":"Internal function cv.plmm calls plmm fold subset original data.","code":""},{"path":"/reference/cvf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation internal function for cv.plmm — cvf","text":"","code":"cvf(i, X, y, K, fold, type, cv.args, ...)"},{"path":"/reference/cvf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation internal function for cv.plmm — cvf","text":"Fold number excluded fit. X Design matrix. May include clinical covariates non-SNP data. case, X_for_K supplied witha  matrix containing SNP data computation GRM. y Original continuous outcome vector. K Known estimated similarity matrix. fold n-length vector fold-assignments. type character argument indicating returned predict.plmm. type == 'response' predictions based linear predictor, $X beta$. type == 'individual' predictions based linear predictor plus estimated random effect (BLUP). cv.args List additional arguments passed plmm. ... Optional arguments","code":""},{"path":"/reference/genDataPS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with population structure — sim_ps_dat","title":"Generate data with population structure — sim_ps_dat","text":"function allows simulate structured genetic data (SNP) unobserved environmental confounding effect.","code":""},{"path":"/reference/genDataPS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with population structure — sim_ps_dat","text":"","code":"sim_ps_dat(   n = 200,   p = 1000,   p1 = floor(p/2),   nJ = rep(50, 4),   structureX = \"indep_subpops\",   Fst = NULL,   inbr = \"heterogeneous\",   structureGamma = c(\"dichotomous_discordant\"),   eta = 0.8,   xi = 0,   standardizeX = TRUE,   structureX_other = NULL,   sampleCols = TRUE,   B0 )"},{"path":"/reference/genDataPS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with population structure — sim_ps_dat","text":"n Number observations/samples simulate. Defaults 200. p Number SNPs simulate. Defaults 1000. p1 Number SNPs causal. Defaults floor(p/2). nJ Number observations subpopulation. length nJ corresponds number subpopulations. Defaults rep(50, 4). structureX Type structure simulate. Fst desired final FST admixed individuals. Ranges 0 1. high FST implies greater differentiation among populations. Defaults 0.1 structureX = 1d_linear 0.2 structureX = indep_subpops. Otherwise defaults NULL. inbr Indicates whether desired inbreeding homogeneous heterogeneous. Defaults heterogeneous. structureGamma desired structure environmental confounding effect. Defaults 'dichotomous_discordant' eta desired proportion variance outcome attributable causal SNP effects. words, SNR. xi desired proportion non-signal variance outcome attributable unobserved environmental confounding effects. standardizeX generated X matrix standardized? Defaults TRUE. structureX_other structureX == \"\", matrix SnpMatrix object subjects rows SNPs columns used generate pseudophenotypes must supplied . sampleCols logical flag whether columns resultant X matrix scrambled. may desirable causal SNPs change one simulation next. Defaults TRUE. B0 Optional. Additional intercept value.","code":""},{"path":"/reference/genDataPS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with population structure — sim_ps_dat","text":"list 7 elements: matrix SNP data (X), single-column matrix outcome values (y), single column matrix 'env', vector coefficients (beta), matrix Z values allocating environmental effects among subjects (Z), vector numeric values representing environmental effects (gamma), type structure used SNP data (structureX)","code":""},{"path":"/reference/genDataPS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate data with population structure — sim_ps_dat","text":"","code":"sim_dat <- sim_ps_dat(structureX = \"1d_linear\") example_fit <- plmm(sim_dat$X, sim_dat$y, V = sim_dat$X%*%t(sim_dat$X))"},{"path":"/reference/genGammaUnscaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a vector of environmental confounding effects — sim_environ_eff","title":"Generate a vector of environmental confounding effects — sim_environ_eff","text":"function allows simulate environmental confounding effect. used sim_ps_dat(), scales generated vector order comply user specified desired variance outcome attributable environmental effect.","code":""},{"path":"/reference/genGammaUnscaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a vector of environmental confounding effects — sim_environ_eff","text":"","code":"sim_environ_eff(structureGamma, J)"},{"path":"/reference/genGammaUnscaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a vector of environmental confounding effects — sim_environ_eff","text":"structureGamma character argument describing desired structure. J Number subpopulations.","code":""},{"path":"/reference/genGammaUnscaled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a vector of environmental confounding effects — sim_environ_eff","text":"","code":"sim_environ_eff(structureGamma = \"linear_concordant\", J = 3) #> [1] 3 2 1"},{"path":"/reference/genRelatednessMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a relatedness matrix — relatedness_mat","title":"Generate a relatedness matrix — relatedness_mat","text":"function allows generate n n genetic relatedness matrix. numeric matrix supplied, RRM (Hayes, 2009) used computed XX'/p. character argument describes location prefix PLINK bed/bim/bam files supplied, GRM computed using GCTA method SNPrelate, unless another method specified optional argument.","code":""},{"path":"/reference/genRelatednessMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a relatedness matrix — relatedness_mat","text":"","code":"relatedness_mat(X, ...)"},{"path":"/reference/genRelatednessMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a relatedness matrix — relatedness_mat","text":"X Either numeric matrix genotypes (subjects rows, SNPs columns), character prefix PLINK bed/bim/fam files. ... Optional arguments case character prefix specified.","code":""},{"path":"/reference/genRelatednessMat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a relatedness matrix — relatedness_mat","text":"","code":"RRM <- relatedness_mat(X = scale(admix$X))"},{"path":"/reference/genXps.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an X matrix with population structure — sim_ps_x","title":"Generate an X matrix with population structure — sim_ps_x","text":"function allows simulate structured genetic data (SNP).","code":""},{"path":"/reference/genXps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an X matrix with population structure — sim_ps_x","text":"","code":"sim_ps_x(   n,   nJ,   p,   structureX = c(\"admixture\", \"indep_subpops\", \"1d_linear\", \"1d_circular\",     \"independent\", \"other\"),   Fst = NULL,   inbr = c(\"homogeneous\", \"heterogeneous\"),   standardizeX = TRUE,   plot = FALSE,   structureX_other = NULL,   sampleCols = TRUE )"},{"path":"/reference/genXps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an X matrix with population structure — sim_ps_x","text":"n Number observations/samples simulate. nJ Number observations subpopulation. length nJ corresponds number subpopulations. p Number SNPs simulate. structureX Type structure simulate. Fst desired final FST admixed individuals. Ranges 0 1. high Fst implies greater differentiation among populations. Defaults 0.1 structureX = 1d_linear 0.2 structureX = indep_subpops. Otherwise defaults NULL. inbr Indicates whether desired inbreeding homogeneous heterogeneous. Defaults heterogeneous. standardizeX generated X matrix standardized? Defaults TRUE. plot plot kinship matrix generated? Defaults FALSE. structureX_other structureX == \"\", matrix SnpMatrix object subjects rows SNPs columns used generate pseudophenotypes must supplied . sampleCols logical flag whether columns resultant X matrix scrambled. may desirable causal SNPs change one simulation next. Defaults TRUE.","code":""},{"path":"/reference/genXps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an X matrix with population structure — sim_ps_x","text":"","code":"sim_X <- sim_ps_x(n = 200, nJ = rep(100, 2), p = 1000, structureX = \"indep_subpops\", inbr = \"heterogeneous\")"},{"path":"/reference/gic.html","id":null,"dir":"Reference","previous_headings":"","what":"General information criterion method of selecting lambda for ","title":"General information criterion method of selecting lambda for ","text":"General information criterion method selecting lambda \"plmm\" class","code":""},{"path":"/reference/gic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General information criterion method of selecting lambda for ","text":"","code":"gic(fit, ic = c(\"bic\", \"hdbic\"), SUX, SUy, S, eta)"},{"path":"/reference/gic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General information criterion method of selecting lambda for ","text":"fit object class \"plmm.\" ic Information criterion used select lambda. Currently supports BIC HDBIC. Defaults BIC. SUX Rotated design matrix including rotated intercept unpenalized columns, present. returned part plmm returnX == FALSE, must supplied explicitly. SUy Rotated outcome vector. returned part plmm returnX == FALSE, must supplied explicitly. S Eigenvalues similarity matrix used model fitting. returned part plmm returnX == FALSE, must supplied explicitly. eta Estimated $eta$ value object fit.","code":""},{"path":"/reference/gic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General information criterion method of selecting lambda for ","text":"","code":"fit <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) gic_res <- gic(fit = fit, ic = \"bic\", SUX = fit$SUX, SUy = fit$SUy, S = fit$S, eta = fit$eta) #> Warning: number of items to replace is not a multiple of replacement length #> Warning: longer object length is not a multiple of shorter object length #> Warning: longer object length is not a multiple of shorter object length names(gic_res) #> [1] \"fit\"            \"lambda\"         \"nzero\"          \"gic\"            #> [5] \"lambda.min\"     \"lambda.min.idx\" range(gic_res$gic, na.rm = T) # NAs will result from monomorphic SNPs #> [1]  712.3232 1538.4493"},{"path":"/reference/lamNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate nicely formatted lambda vec — lamNames","title":"Generate nicely formatted lambda vec — lamNames","text":"Generate nicely formatted lambda vec","code":""},{"path":"/reference/lamNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate nicely formatted lambda vec — lamNames","text":"","code":"lamNames(l)"},{"path":"/reference/lamNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate nicely formatted lambda vec — lamNames","text":"l Vector lambda values.","code":""},{"path":"/reference/lamNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate nicely formatted lambda vec — lamNames","text":"character vector formatted lambda value names","code":""},{"path":"/reference/lamNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate nicely formatted lambda vec — lamNames","text":"","code":"l <- c(1, 0.1, 0.01, 0.001)  lamNames(l) #> [1] \"1.0000\" \"0.1000\" \"0.0100\" \"0.0010\""},{"path":"/reference/lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear model with lasso regularization — lasso","title":"Fit a linear model with lasso regularization — lasso","text":"function allows fit linear model via lasso-penalized maximum likelihood output values lmm_lasso_eta. Primarily used simulation comparison lmm_lasso_eta.","code":""},{"path":"/reference/lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear model with lasso regularization — lasso","text":"","code":"lasso(X, y, p1, ...)"},{"path":"/reference/lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear model with lasso regularization — lasso","text":"X Design matrix. y Continuous outcome vector. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. ... Additional optional arguments","code":""},{"path":"/reference/lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a linear model with lasso regularization — lasso","text":"","code":"lasso_fit <- lasso(admix$X, admix$y, p1 = 5) s <- summary(lasso_fit)"},{"path":"/reference/lasso_pca10.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear model with lasso regularization and PC adjutment — lasso_pca10","title":"Fit a linear model with lasso regularization and PC adjutment — lasso_pca10","text":"function allows fit linear model via lasso-penalized maximum likelihood, adjusted first 10 principal components (unpenalized), output values lmm_lasso_eta. Primarily used simulation comparison lmm_lasso_eta.","code":""},{"path":"/reference/lasso_pca10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear model with lasso regularization and PC adjutment — lasso_pca10","text":"","code":"lasso_pca10(X, y, p1, ...)"},{"path":"/reference/lasso_pca10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear model with lasso regularization and PC adjutment — lasso_pca10","text":"X Design matrix. y Continuous outcome vector. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. ... Additional optional arguments","code":""},{"path":"/reference/lasso_pca10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a linear model with lasso regularization and PC adjutment — lasso_pca10","text":"","code":"fit <- lasso_pca10(admix$X, admix$y, p1 = 5) summary(fit) #>         Length Class  Mode    #> fit      12    elnet  list    #> nonzero   1    -none- numeric #> coef    100    -none- numeric #> delta     1    -none- logical #> eta       1    -none- logical"},{"path":"/reference/lmm_ggmix.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear mixed model with lasso regularization — lmm_ggmix","title":"Fit a linear mixed model with lasso regularization — lmm_ggmix","text":"function allows fit linear mixed model via lasso-penalized maximum likelihood.","code":""},{"path":"/reference/lmm_ggmix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear mixed model with lasso regularization — lmm_ggmix","text":"","code":"lmm_ggmix(X, y, p1, standardize = FALSE, K = NULL)"},{"path":"/reference/lmm_ggmix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear mixed model with lasso regularization — lmm_ggmix","text":"X Design matrix. y Continuous outcome vector. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. standardize standardization performed within glmnet()? Defaults FALSE. K Matrix used compute similarity matrix, K. multi-chromosome analysis may supplied order perform leave-one-chromosome-correction. objective adjust population stratification unobserved confounding without rotating causal SNP effects. Default \\(\\frac{1}{p} XX^T\\)","code":""},{"path":"/reference/lmm_ggmix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a linear mixed model with lasso regularization — lmm_ggmix","text":"","code":"lmm_ggmix_fit <- lmm_ggmix(X = admix$X, y = admix$y, p1 = 10, K = relatedness_mat(admix$X))"},{"path":"/reference/lmm_lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a penalizedLMM with lasso regularization — lmm_lasso","title":"Fit a penalizedLMM with lasso regularization — lmm_lasso","text":"function allows fit linear mixed model via lasso-penalized maximum likelihood.","code":""},{"path":"/reference/lmm_lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a penalizedLMM with lasso regularization — lmm_lasso","text":"","code":"lmm_lasso(X, y, p1, standardize = FALSE, K = NULL)"},{"path":"/reference/lmm_lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a penalizedLMM with lasso regularization — lmm_lasso","text":"X Design matrix. y Continuous outcome vector. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. standardize standardization performed within glmnet()? Defaults FALSE. K Matrix used compute similarity matrix, K. multi-chromosome analysis may supplied order perform leave-one-chromosome-correction. objective adjust population stratification unobserved confounding without rotating causal SNP effects. Default \\(\\frac{1}{p} XX^T\\)","code":""},{"path":"/reference/lmm_lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a penalizedLMM with lasso regularization — lmm_lasso","text":"","code":"fit <- lmm_lasso(X = admix$X, y = admix$y, p1 = 10, K = relatedness_mat(admix$X))"},{"path":"/reference/logLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"function allows evaluate negtive log-likelihood linear mixed model assumption null model order estimate variance parameter, eta.","code":""},{"path":"/reference/logLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"","code":"logLik(eta, Uy, S)"},{"path":"/reference/logLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"eta proportion variance outcome attributable causal SNP effects. words, SNR. Sometimes referred narrow-sense heritability. Uy continuous outcome, y, rotated eigenvectors similarity matrix, K. S eigenvalues similarity matrix, K.","code":""},{"path":"/reference/logLik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"","code":"admix$K <- relatedness_mat(admix$X) # create an estimated covariance matrix  ev <- eigen(admix$K) U <- ev$vectors fit <- plmm(X = admix$X, y = admix$y, K = admix$K) (logLik(eta = fit$eta, Uy = U%*%admix$y, S = ev$values )) #> [1] 468.6181"},{"path":"/reference/logLik_nonnull.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"Evaluate negative log-likelihood non-null Gaussian plmm model","code":""},{"path":"/reference/logLik_nonnull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"","code":"logLik_nonnull(fit, SUX, SUy, S, eta)"},{"path":"/reference/logLik_nonnull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"fit object class plmm_fit. SUX Rotated design matrix including rotated intercept unpenalized columns, present. SUy Rotated outcome vector. S Eigenvalues similarity matrix used model fitting. eta Estimated $eta$ value object fit.","code":""},{"path":"/reference/logLik_nonnull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"","code":"admix$K <- relatedness_mat(admix$X) # create an estimated covariance matrix  my_fit <- plmm(X = admix$X, y = admix$y, K = admix$K) LL <- logLik_nonnull(fit = my_fit, SUX = my_fit$SUX, SUy = my_fit$SUy,  S = my_fit$S, eta = my_fit$eta) #> Warning: number of items to replace is not a multiple of replacement length head(LL) #> [1] -350.8784 -349.8027 -347.7783 -345.7445 -343.9401 -343.6242 # See pp. 16-18 in A.R.'s thesis for details"},{"path":"/reference/loss.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Loss method for ","title":"Loss method for ","text":"Loss method \"plmm\" class","code":""},{"path":"/reference/loss.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loss method for ","text":"","code":"loss.plmm(y, yhat)"},{"path":"/reference/loss.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loss method for ","text":"y Observed response vector yhat Predicted response vector","code":""},{"path":"/reference/loss.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loss method for ","text":"","code":"fit <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) yhat <- predict(object = fit, newX = admix$X, type = 'response', lambda = 0.05) head(loss.plmm(yhat = yhat, y = admix$y)) #> [1] 1.79748851 0.02510879 0.98136900 5.56540592 0.08047135 0.09544308"},{"path":"/reference/plink_example.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to help with accessing example PLINK files — plink_example","title":"A function to help with accessing example PLINK files — plink_example","text":"function help accessing example PLINK files","code":""},{"path":"/reference/plink_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to help with accessing example PLINK files — plink_example","text":"","code":"plink_example(path = NULL, parent = FALSE)"},{"path":"/reference/plink_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to help with accessing example PLINK files — plink_example","text":"path Optional argument specifying path (filename) external data file inst/extdata parent path=TRUE user wants name parent directory file located, set parent=TRUE. Defaults FALSE.","code":""},{"path":"/reference/plink_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to help with accessing example PLINK files — plink_example","text":"path=NULL, character vector file names returned. path given, character string full file path","code":""},{"path":"/reference/plink_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to help with accessing example PLINK files — plink_example","text":"","code":"# name of all external PLINK data files  (plink_example()) #> character(0)  # name of file path for a specific PLINK file  plink_example(path=\"cad.fam\") # what shows up here should be unique to the user's machine  #> Error in base::system.file(\"inst/extdata\", path, package = \"penalizedLMM\",     mustWork = TRUE): no file found  # name of file path for parent directory of a specific file  plink_example(parent=T, path=\"cad.fam\") #> Error in base::system.file(\"inst/extdata\", package = \"penalizedLMM\", mustWork = T): no file found"},{"path":"/reference/plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear mixed model with non-convex regularization — plmm","title":"Fit a linear mixed model with non-convex regularization — plmm","text":"function allows fit linear mixed model via non-convex penalized maximum likelihood.","code":""},{"path":"/reference/plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear mixed model with non-convex regularization — plmm","text":"","code":"plmm(   X,   y,   K,   k = NULL,   eta_star,   penalty = c(\"MCP\", \"SCAD\", \"lasso\"),   gamma,   alpha = 1,   lambda.min,   nlambda = 100,   lambda,   eps = 1e-04,   max.iter = 10000,   convex = TRUE,   dfmax = p + 1,   warn = TRUE,   penalty.factor = rep(1, ncol(X)),   init = rep(0, ncol(X)),   returnX = TRUE,   trace = FALSE )"},{"path":"/reference/plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear mixed model with non-convex regularization — plmm","text":"X Design matrix. May include clinical covariates non-SNP data. y Continuous outcome vector. K Similarity matrix used rotate data. either known matrix reflects covariance y, estimate (Default \\(\\frac{1}{p}(XX^T)\\)). k integer 1 nrow(K) indicating number singular values requested package RSpectra installed. Defaults NULL. eta_star Optional argument input specific eta term rather estimate data. K known covariance matrix full rank, 1. penalty penalty applied model. Either \"MCP\" (default), \"SCAD\", \"lasso\". gamma tuning parameter MCP/SCAD penalty (see details). Default 3 MCP 3.7 SCAD. alpha Tuning parameter Mnet estimator controls relative contributions MCP/SCAD penalty ridge, L2 penalty. alpha=1 equivalent MCP/SCAD penalty, alpha=0 equivalent ridge regression. However, alpha=0 supported; alpha may arbitrarily small, exactly 0. lambda.min smallest value lambda, fraction lambda.max. Default .001 number observations larger number covariates .05 otherwise. nlambda Length sequence lambda. Default 100. lambda user-specified sequence lambda values. default, sequence values length nlambda computed, equally spaced log scale. eps Convergence threshold. algorithm iterates RMSD change linear predictors coefficient less eps. Default 1e-4. max.iter Maximum number iterations (total across entire path). Default 10000. convex Calculate index objective function ceases locally convex? Default TRUE. dfmax Upper bound number nonzero coefficients. Default upper bound. However, large data sets, computational burden may heavy models large number nonzero coefficients. warn Return warning messages failures converge model saturation? Default TRUE. penalty.factor multiplicative factor penalty applied coefficient. supplied, penalty.factor must numeric vector length equal number columns X. purpose penalty.factor apply differential penalization coefficients thought likely others model. particular, penalty.factor can 0, case coefficient always model without shrinkage. init Initial values coefficients. Default 0 columns X. returnX Return standardized design matrix along fit? default, option turned X 100 MB, turned larger matrices preserve memory. trace set TRUE, inform user progress announcing beginning step modeling process. Default FALSE.","code":""},{"path":"/reference/plmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a linear mixed model with non-convex regularization — plmm","text":"list including estimated coefficients original scale, well model fitting details","code":""},{"path":"/reference/plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a linear mixed model with non-convex regularization — plmm","text":"","code":"# using admix data  fit_admix1 <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) s1 <- summary(fit_admix1, idx = 99) print(s1) #> MCP-penalized regression model with n=197, p=101 at lambda=0.00037 #> ------------------------------------------------- #> The model converged  #> ------------------------------------------------- #> # of non-zero coefficients:  98  #> Constant features (features without variation):  Snp8 Snp14  #> -------------------------------------------------  if (FALSE) { fit_admix2 <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X), k = 3) s2 <- summary(fit_admix2, idx = 99) print(s2) }   # now use PLINK data files if (FALSE) { cad <- process_plink(prefix = \"cad\", dataDir = plink_example(path=\"cad.fam\", parent=T)) cad_clinical <- read.csv(plink_example(path=\"cad_clinical.csv\")) # for the sake of illustration, I use a simple mean imputation for the outcome  cad_clinical$hdl_impute <- ifelse(is.na(cad_clinical$hdl), mean(cad_clinical$hdl, na.rm = T), cad_clinical$hdl)  # fit with no 'k' specified fit_plink1 <- plmm(X = cad$genotypes, y = cad_clinical$hdl_impute) summary(fit_plink1, idx = 5) # Runs in 219 seconds (3.65 mins) on my 2015 MacBook Pro  # fit with 'k = 5' specified (so using RSpectra::svds()) fit_plink2 <- plmm(X = cad$genotypes, y = cad_clinical$hdl_impute, k = 5) # Runs in 44 seconds on my 2015 MacBook Pro }"},{"path":"/reference/plmm_lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a penalizedLMM with lasso regularization using penalizedLMM — plmm_lasso","title":"Fit a penalizedLMM with lasso regularization using penalizedLMM — plmm_lasso","text":"function allows fit linear mixed model via penalized maximum likelihood null model variance component estimation.","code":""},{"path":"/reference/plmm_lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a penalizedLMM with lasso regularization using penalizedLMM — plmm_lasso","text":"","code":"plmm_lasso(X, y, K, p1, ...)"},{"path":"/reference/plmm_lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a penalizedLMM with lasso regularization using penalizedLMM — plmm_lasso","text":"X Design matrix. y Continuous outcome vector. K Similarity matrix. multi-chromosome analysis may supplied order perform leave-one-chromosome-correction. objective adjust population stratification unobserved confounding without rotating causal SNP effects. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. ... Additional optional arguments","code":""},{"path":"/reference/plmm_lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a penalizedLMM with lasso regularization using penalizedLMM — plmm_lasso","text":"","code":"RRM <- relatedness_mat(X = scale(admix$X)) fit <- plmm_lasso(X = admix$X, y = admix$y, K = RRM, p1 = 10) s <- summary(fit)"},{"path":"/reference/plmm_mcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a penalizedLMM with MCP regularization using penalizedLMM — plmm_mcp","title":"Fit a penalizedLMM with MCP regularization using penalizedLMM — plmm_mcp","text":"function allows fit linear mixed model via penalized maximum likelihood null model variance component estimation.","code":""},{"path":"/reference/plmm_mcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a penalizedLMM with MCP regularization using penalizedLMM — plmm_mcp","text":"","code":"plmm_mcp(X, y, p1, standardize = FALSE, K, ...)"},{"path":"/reference/plmm_mcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a penalizedLMM with MCP regularization using penalizedLMM — plmm_mcp","text":"X Design matrix. y Continuous outcome vector. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. standardize standardization performed within glmnet()? Defaults FALSE. K Similarity matrix. multi-chromosome analysis may supplied order perform leave-one-chromosome-correction. objective adjust population stratification unobserved confounding without rotating causal SNP effects. ... arguments plmm()","code":""},{"path":"/reference/plmm_mcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a penalizedLMM with MCP regularization using penalizedLMM — plmm_mcp","text":"","code":"plmm_mcp_fit <- plmm_mcp(admix$X, admix$y, p1 = 5) s <- summary(plmm_mcp_fit)"},{"path":"/reference/plmm_nll.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"function allows evaluate negtive log-likelihood linear mixed model assumption null model order estimate variance parameter, eta.","code":""},{"path":"/reference/plmm_nll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"","code":"logLik(eta, Uy, S)"},{"path":"/reference/plmm_nll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"eta proportion variance outcome attributable causal SNP effects. words, SNR. Sometimes referred narrow-sense heritability. Uy continuous outcome, y, rotated eigenvectors similarity matrix, K. S eigenvalues similarity matrix, K.","code":""},{"path":"/reference/plmm_nll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the negative log-likelihood of a null Gaussian penalizedLMM model — logLik","text":"","code":"admix$V <- admix$X%*%t(admix$X) # create an estimated covariance matrix  # NB: this is an estimate of K  ev <- eigen(admix$V) U <- ev$vectors fit <- plmm(X = admix$X, y = admix$y, V = admix$V, penalty = \"MCP\") (logLik(eta = fit$eta, Uy = U%*%admix$y, S = ev$values )) #> [1] 570.0963"},{"path":"/reference/plmm_nll_nonnull.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"Evaluate negative log-likelihood non-null Gaussian plmm model","code":""},{"path":"/reference/plmm_nll_nonnull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"","code":"logLik_nonnull(fit, SUX, SUy, S, eta)"},{"path":"/reference/plmm_nll_nonnull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"fit object class plmm_fit. SUX Rotated design matrix including rotated intercept unpenalized columns, present. SUy Rotated outcome vector. S Eigenvalues similarity matrix used model fitting. eta Estimated $eta$ value object fit.","code":""},{"path":"/reference/plmm_nll_nonnull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the negative log-likelihood of a non-null Gaussian plmm model — logLik_nonnull","text":"","code":"admix$K <- (1/nrow(admix$X))*tcrossprod(admix$X, admix$X) # create an estimated covariance matrix  # NB: this is an estimate of K  K_svd <- svd(K) #> Error in as.matrix(x): object 'K' not found U <- K_svd$u #> Error in eval(expr, envir, enclos): object 'K_svd' not found D <- K_svd$d #> Error in eval(expr, envir, enclos): object 'K_svd' not found # WORK IN PROGRESS #FIXME need to iron out this example # See pp. 16-18 in A.R.'s thesis  ev <- eigen(admix$V) #> Error in array(x, c(length(x), 1L), if (!is.null(names(x))) list(names(x),     NULL) else NULL): 'data' must be of a vector type, was 'NULL' U <- ev$vectors #> Error in eval(expr, envir, enclos): object 'ev' not found S <- ev$values #> Error in eval(expr, envir, enclos): object 'ev' not found UX <- U%*%admix$X #> Error in eval(expr, envir, enclos): object 'U' not found Uy <- U%*%admix$y #> Error in eval(expr, envir, enclos): object 'U' not found fit <- plmm(X = admix$X, y = admix$y, V = admix$V, penalty = \"MCP\") (logLik_nonnull(fit = my_fit, SUX = S%*%UX, SUy = S%*%admix$y, S = S, eta = my_fit$eta)) #> Error in logLik_nonnull(fit = my_fit, SUX = S %*% UX, SUy = S %*% admix$y,     S = S, eta = my_fit$eta): object 'S' not found"},{"path":"/reference/plmm_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate eta using a null Gaussian penalizedLMM model — plmm_null","title":"Estimate eta using a null Gaussian penalizedLMM model — plmm_null","text":"function allows estimate eta (signal noise ratio, narrow-sense variability) assumption null model.","code":""},{"path":"/reference/plmm_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate eta using a null Gaussian penalizedLMM model — plmm_null","text":"","code":"plmm_null(y, X = NULL, K = NULL, k = NULL)"},{"path":"/reference/plmm_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate eta using a null Gaussian penalizedLMM model — plmm_null","text":"y Continuous outcome vector. supplied, K treated known eta estimated. X matrix SNP data. K supplied, X required. K Estimated known similarity matrix. default, K realized relationship matrix, \\(\\frac{1}{p}XX^T\\), \\(p\\) number columns X k integer 1 nrow(K) indicating number singular values requested package RSpectra installed. Defaults NULL.","code":""},{"path":"/reference/plmm_null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate eta using a null Gaussian penalizedLMM model — plmm_null","text":"","code":"res <- plmm_null(y = admix$y, X = admix$X) (res$eta) # estimate of eta  #> [1] 0.5110618  res2 <- plmm_null(y = admix$y, X = sim_ps_x(n = nrow(admix$X), nJ = 3, p = ncol(admix$X)), k = 3) (res2$eta) #> [1] 0.9899515"},{"path":"/reference/plmm_scad.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a penalizedLMM with SCAD regularization using penalizedLMM — plmm_scad","title":"Fit a penalizedLMM with SCAD regularization using penalizedLMM — plmm_scad","text":"function allows fit linear mixed model via penalized maximum likelihood null model variance component estimation.","code":""},{"path":"/reference/plmm_scad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a penalizedLMM with SCAD regularization using penalizedLMM — plmm_scad","text":"","code":"plmm_scad(X, y, p1, standardize = FALSE, K)"},{"path":"/reference/plmm_scad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a penalizedLMM with SCAD regularization using penalizedLMM — plmm_scad","text":"X Design matrix. y Continuous outcome vector. p1 Number causal SNPs. Lambda selected <= p1 variables enter model. standardize standardization performed within glmnet()? Defaults FALSE. K Similarity matrix. multi-chromosome analysis may supplied order perform leave-one-chromosome-correction. objective adjust population stratification unobserved confounding without rotating causal SNP effects.","code":""},{"path":"/reference/plmm_scad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a penalizedLMM with SCAD regularization using penalizedLMM — plmm_scad","text":"","code":"RRM <- relatedness_mat(X = scale(admix$X)) fit_scad <- plmm_scad(X = admix$X, y = admix$y, p1 = 5, K = RRM) s <- summary(fit_scad)"},{"path":"/reference/plot.cv.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for cv.plmm class — plot.cv.plmm","title":"Plot method for cv.plmm class — plot.cv.plmm","text":"Plot method cv.plmm class","code":""},{"path":"/reference/plot.cv.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for cv.plmm class — plot.cv.plmm","text":"","code":"# S3 method for cv.plmm plot(   x,   log.l = TRUE,   type = c(\"cve\", \"rsq\", \"scale\", \"snr\", \"all\"),   selected = TRUE,   vertical.line = TRUE,   col = \"red\",   ... )"},{"path":"/reference/plot.cv.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for cv.plmm class — plot.cv.plmm","text":"x object class cv.plmm log.l Logical indicate plot returned natural log scale. Defaults log.l = FALSE. type Type plot return. Defaults \"cve.\" selected Logical indicate variables plotted. Defaults TRUE. vertical.line Logical indicate whether vertical line plotted minimum/maximum value. Defaults TRUE. col Color vertical line, plotted. Defaults \"red.\" ... Additional arguments.","code":""},{"path":"/reference/plot.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for plmm class — plot.plmm","title":"Plot method for plmm class — plot.plmm","text":"Plot method plmm class","code":""},{"path":"/reference/plot.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for plmm class — plot.plmm","text":"","code":"# S3 method for plmm plot(x, alpha = 1, log.l = FALSE, shade = TRUE, col, ...)"},{"path":"/reference/plot.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for plmm class — plot.plmm","text":"x object class plmm alpha Tuning parameter Mnet estimator controls relative contributions MCP/SCAD penalty ridge, L2 penalty. alpha=1 equivalent MCP/SCAD penalty, alpha=0 equivalent ridge regression. However, alpha=0 supported; alpha may arbitrarily small, exactly 0. log.l Logical indicate plot returned natural log scale. Defaults log.l = FALSE. shade Logical indicate whether local nonconvex region shaded. Defaults TRUE. col Vector colors coefficient lines. ... Additional arguments.","code":""},{"path":"/reference/plot.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for plmm class — plot.plmm","text":"","code":"fit <- plmm(admix$X[,1:10], admix$y, nlambda = 10) # for the sake of illustration, I consider only 10 SNPs in the plot  plot(fit)  plot(fit, log.l = TRUE)"},{"path":"/reference/predict.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for plmm class — predict.plmm","title":"Predict method for plmm class — predict.plmm","text":"Predict method plmm class","code":""},{"path":"/reference/predict.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for plmm class — predict.plmm","text":"","code":"# S3 method for plmm predict(   object,   newX,   type = c(\"response\", \"coefficients\", \"vars\", \"nvars\", \"blup\"),   lambda,   idx = 1:length(object$lambda),   X,   y,   ... )"},{"path":"/reference/predict.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for plmm class — predict.plmm","text":"object object class plmm. newX Design matrix used computing predicted values requested. type character argument indicating type prediction returned. Options \"response,\" \"coefficients,\" \"vars,\" \"nvars,\" \"blup.\" See details. lambda numeric vector regularization parameter lambda values predictions requested. idx Vector indices penalty parameter lambda predictions required. default, indices returned. X Optional argument. Original design matrix (including intercept column) object. Required type == 'blup' object large returned plmm object. y Optional argument. Original continuous outcome vector object. Required type == 'blup'. ... Additional optional arguments U Optional argument. Eigenvectors similarity matrix object. Required type == 'blup'. S Optional argument. Eigenvalues similarity matrix object. Required type == 'blup'. eta Optional argument. Estimated $eta$ value object. Required type == 'blup'. covariance Optional argument. $q times n$ covariance matrix new old observations. Required type == 'blup'.","code":""},{"path":"/reference/predict.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method for plmm class — predict.plmm","text":"","code":"# fit a model  fit <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X))  # simulate new data  newX <- sim_ps_x(n = nrow(admix$X), nJ = 4, p = ncol(admix$X),  structureX = \"independent\", inbr = \"heterogeneous\", standardizeX = FALSE)    # make predictions for all lambda values   pred1 <- predict(object = fit, newX = newX, type = \"response\")    # make predictions for a select number of lambda values   pred2 <- predict(object = fit, newX = newX, type = \"response\", idx=98)    # make prediction using blup   pred3 <- predict(object = fit, newX = newX, type = \"blup\", idx=98) #> Warning: The BLUP option is under development. Rely on these estimates at your own risk.   # compare y predictions    compare_y <- data.frame(y = admix$y, yhat_response = pred2, yhat_blup = pred3)    if (FALSE) {  fit_noX <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X),   returnX = FALSE)    pred4 <- predict(object = fit_noX, newX = newX, type = \"blup\", idx=98)    }     # make predictions when X is big cad <- process_plink(prefix = \"cad\", dataDir = plink_example(path=\"cad.fam\", parent=T)) #>  #> Preprocessing cad data: #> Error in base::system.file(\"inst/extdata\", package = \"penalizedLMM\", mustWork = T): no file found cad_clinical <- read.csv(plink_example(path=\"cad_clinical.csv\")) #> Error in base::system.file(\"inst/extdata\", path, package = \"penalizedLMM\",     mustWork = TRUE): no file found # for the sake of illustration, I use a simple mean imputation for the outcome  cad_clinical$hdl_impute <- ifelse(is.na(cad_clinical$hdl), mean(cad_clinical$hdl, na.rm = T), cad_clinical$hdl) #> Error in ifelse(is.na(cad_clinical$hdl), mean(cad_clinical$hdl, na.rm = T),     cad_clinical$hdl): object 'cad_clinical' not found fit_cad <- plmm(X = cad$genotypes, y = cad_clinical$hdl_impute, k = 5) #> Error in relatedness_mat(X): object 'cad' not found cad_X <- cad$genotypes #> Error in eval(expr, envir, enclos): object 'cad' not found cad_y <- cad_clinical$hdl_impute #> Error in eval(expr, envir, enclos): object 'cad_clinical' not found newX_cad <- sim_ps_x(n = nrow(cad_X), nJ = 4, p = ncol(cad_X),  structureX = \"independent\", inbr = \"heterogeneous\", standardizeX = FALSE) #> Error in nrow(cad_X): object 'cad_X' not found pred_cad <- predict(object = fit_cad, newX = newX_cad, type='blup', idx = 95, X = cad_X, y = cad_y) #> Error in predict(object = fit_cad, newX = newX_cad, type = \"blup\", idx = 95,     X = cad_X, y = cad_y): object 'fit_cad' not found head(data.frame(cad_y, pred_cad)) #> Error in data.frame(cad_y, pred_cad): object 'cad_y' not found"},{"path":"/reference/preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess PLINK files — preprocess","title":"Preprocess PLINK files — preprocess","text":"function allows preprocess PLINK bed/bim/fam files use penalizedLMM functions. Unreliable SNPs removed missing values imptued using either snpStats, tagged, HWE mean value.","code":""},{"path":"/reference/preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess PLINK files — preprocess","text":"","code":"preprocess(prefix, dataDir, sexcheck = FALSE, na.strings = \"-9\", impute = TRUE)"},{"path":"/reference/preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess PLINK files — preprocess","text":"prefix Character argument prefix bed/bim/fam files. dataDir Directory plink files (.sexcheck files located sexcheck = TRUE) located sexcheck Logical flag whether PLINK sexcheck files incorporated. Defaults FALSE. TRUE, sexcheck files must form \"prefix.sexcheck\" na.strings snpStats. Strings .bam .fam files recoded NA. Defaults \"-9\" impute Logical flag whether imputation performed. Defaults TRUE since plmm handle missing values.","code":""},{"path":"/reference/preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess PLINK files — preprocess","text":"three element list object: genotypes filtered imputed genotypes snpMatrix object subjects rows SNPs columns. map matrix SNP data. fam matrix subject data.","code":""},{"path":"/reference/print.summary.cv.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for summary.cv.plmm objects — print.summary.cv.plmm","title":"Print method for summary.cv.plmm objects — print.summary.cv.plmm","text":"Print method summary.cv.plmm objects","code":""},{"path":"/reference/print.summary.cv.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for summary.cv.plmm objects — print.summary.cv.plmm","text":"","code":"# S3 method for summary.cv.plmm print(obj, digits, ...)"},{"path":"/reference/print.summary.cv.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for summary.cv.plmm objects — print.summary.cv.plmm","text":"obj object class summary.cv.plmm digits number digits use formatting output ...","code":""},{"path":"/reference/print.summary.cv.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for summary.cv.plmm objects — print.summary.cv.plmm","text":"","code":"cv_fit <- cv.plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used s <- summary.cv.plmm(cv_fit) #> Error in summary.cv.plmm(cv_fit): could not find function \"summary.cv.plmm\" print.summary.cv.plmm(s) #> Error in print.summary.cv.plmm(s): could not find function \"print.summary.cv.plmm\""},{"path":"/reference/print.summary.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to print the summary of a plmm model — print.summary.plmm","title":"A function to print the summary of a plmm model — print.summary.plmm","text":"function print summary plmm model","code":""},{"path":"/reference/print.summary.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to print the summary of a plmm model — print.summary.plmm","text":"","code":"# S3 method for summary.plmm print(x)"},{"path":"/reference/print.summary.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to print the summary of a plmm model — print.summary.plmm","text":"x summary.plmm object","code":""},{"path":"/reference/print.summary.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to print the summary of a plmm model — print.summary.plmm","text":"","code":"fit <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) fit2 <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X), penalty = \"SCAD\") s1 <- summary(fit, idx = 97) s2 <- summary(fit, lambda = fit$lambda[97]) s3 <- summary(fit2, idx = 25) print.summary.plmm(s1) #> Error in print.summary.plmm(s1): could not find function \"print.summary.plmm\" print.summary.plmm(s2) #> Error in print.summary.plmm(s2): could not find function \"print.summary.plmm\" print.summary.plmm(s3) #> Error in print.summary.plmm(s3): could not find function \"print.summary.plmm\""},{"path":"/reference/process_plink.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess PLINK files — process_plink","title":"Preprocess PLINK files — process_plink","text":"function allows preprocess PLINK bed/bim/fam files use penalizedLMM functions. Unreliable SNPs removed missing values imptued using either snpStats, tagged, HWE mean value.","code":""},{"path":"/reference/process_plink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess PLINK files — process_plink","text":"","code":"process_plink(   prefix,   dataDir,   sexcheck = FALSE,   na.strings = \"-9\",   impute = TRUE,   coerce = TRUE,   quiet = FALSE )"},{"path":"/reference/process_plink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess PLINK files — process_plink","text":"prefix Character argument prefix bed/bim/fam files. dataDir Directory plink files (.sexcheck files located sexcheck = TRUE) located sexcheck Logical flag whether PLINK sexcheck files incorporated. Defaults FALSE. TRUE, sexcheck files must form \"prefix.sexcheck\" na.strings snpStats. Strings .bam .fam files recoded NA. Defaults \"-9\" impute Logical flag whether imputation performed. Defaults TRUE since plmm handle missing values. coerce Logical flag: design matrix coerced numeric matrix? Defaults TRUE. quiet Logical flag: progress messages printed? Defaults FALSE.","code":""},{"path":"/reference/process_plink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess PLINK files — process_plink","text":"three element list object: genotypes filtered imputed genotypes snpMatrix object subjects rows SNPs columns. coerce=T, numeric matrix. map matrix SNP data. fam matrix subject data.","code":""},{"path":"/reference/process_plink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess PLINK files — process_plink","text":"","code":"test <- process_plink(prefix = \"cad\", dataDir = plink_example(path=\"cad.fam\", parent=T)) #>  #> Preprocessing cad data: #> Error in base::system.file(\"inst/extdata\", package = \"penalizedLMM\", mustWork = T): no file found"},{"path":"/reference/relatedness_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a relatedness matrix — relatedness_mat","title":"Calculate a relatedness matrix — relatedness_mat","text":"function allows generate n n genetic relatedness matrix. numeric matrix supplied, RRM (Hayes, 2009) used computed XX'/p, X standardized. character argument describes location prefix PLINK bed/bim/bam files supplied, GRM computed using GCTA method SNPrelate, unless another method specified optional argument.","code":""},{"path":"/reference/relatedness_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a relatedness matrix — relatedness_mat","text":"","code":"relatedness_mat(X, ...)"},{"path":"/reference/relatedness_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a relatedness matrix — relatedness_mat","text":"X Either numeric matrix genotypes (subjects rows, SNPs columns), character prefix PLINK bed/bim/fam files. ... Optional arguments case character prefix specified.","code":""},{"path":"/reference/relatedness_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a relatedness matrix — relatedness_mat","text":"","code":"RRM <- relatedness_mat(X = admix$X)"},{"path":"/reference/rotate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute transformed X and y for subsequent plmm rescaling and fitting — rotate_data","title":"Compute transformed X and y for subsequent plmm rescaling and fitting — rotate_data","text":"function allows fit linear mixed model via non-convex penalized maximum likelihood.","code":""},{"path":"/reference/rotate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute transformed X and y for subsequent plmm rescaling and fitting — rotate_data","text":"","code":"rotate_data(X, y, K = NULL, eta_star, k = NULL)"},{"path":"/reference/rotate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute transformed X and y for subsequent plmm rescaling and fitting — rotate_data","text":"X Design matrix. May include clinical covariates non-SNP data. y Continuous outcome vector. K Estimated known similarity matrix. default, K realized relationship matrix, \\(\\frac{1}{p}XX^T\\), \\(p\\) number columns X eta_star Optional arg input specific eta term rather estimate data. v known matrix, 1. k integer 1 nrow(K) indicating number singular values requested package RSpectra installed. Defaults NULL.","code":""},{"path":"/reference/rotate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute transformed X and y for subsequent plmm rescaling and fitting — rotate_data","text":"","code":"std_X <- scale(admix$X) K <- relatedness_mat(std_X) rotated_dat <- rotate_data(std_X, admix$y, K) rotated_dat2 <- rotate_data(std_X, admix$y, K = K, k = 5)"},{"path":"/reference/scale_varp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate scale by the population standard deviation, without centering — scale_varp","title":"Calculate scale by the population standard deviation, without centering — scale_varp","text":"function allows scale vectors matrix population standard deviation without centering; assume sample population.","code":""},{"path":"/reference/scale_varp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate scale by the population standard deviation, without centering — scale_varp","text":"","code":"scale_varp(X)"},{"path":"/reference/scale_varp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate scale by the population standard deviation, without centering — scale_varp","text":"X numeric matrix","code":""},{"path":"/reference/scale_varp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate scale by the population standard deviation, without centering — scale_varp","text":"","code":"M <- matrix(rnorm(25), 5, 5) head(M) #>            [,1]       [,2]       [,3]        [,4]       [,5] #> [1,]  0.5696457  1.6615161  2.2092517  0.39358948 -1.0778838 #> [2,] -1.2510198 -0.2955626 -0.2197401  0.59234656  2.6080650 #> [3,]  0.1749630 -0.7144344  1.0266848 -0.07537733  0.6076202 #> [4,]  0.1670542 -0.3770194 -1.0114051  0.80945150 -1.3454462 #> [5,] -0.8313797  0.4099003 -1.8707620 -2.75654304 -2.1755604 M_scaled <- scale_varp(M) head(M_scaled) #> $scale_vals #> [1] 0.7265340 0.8565712 1.4495414 1.3240249 1.7248958 #>  #> $scaled_X #>            [,1]       [,2]       [,3]        [,4]       [,5] #> [1,]  0.7840593  1.9397290  1.5241039  0.29726742 -0.6248979 #> [2,] -1.7219013 -0.3450532 -0.1515929  0.44738324  1.5120131 #> [3,]  0.2408187 -0.8340630  0.7082825 -0.05693045  0.3522649 #> [4,]  0.2299331 -0.4401495 -0.6977415  0.61135669 -0.7800159 #> [5,] -1.1443095  0.4785361 -1.2905889 -2.08194194 -1.2612706 #> attr(,\"scaled:scale\") #> [1] 0.7265340 0.8565712 1.4495414 1.3240249 1.7248958 #>   X_scaled <- scale_varp(admix$X) admix$X[1:5, 1:7]; X_scaled[1:5, 1:7] #>      Snp1 Snp2 Snp3 Snp4 Snp5 Snp6 Snp7 #> [1,]    0    0    0    0    0    0    1 #> [2,]    0    0    0    0    0    1    0 #> [3,]    0    0    0    0    0    1    1 #> [4,]    0    0    0    0    0    0    0 #> [5,]    1    0    0    1    0    0    1 #> Error in X_scaled[1:5, 1:7]: incorrect number of dimensions #>      Snp1 Snp2 Snp3 Snp4 Snp5 Snp6 Snp7 #> [1,]    0    0    0    0    0    0    1 #> [2,]    0    0    0    0    0    1    0 #> [3,]    0    0    0    0    0    1    1 #> [4,]    0    0    0    0    0    0    0 #> [5,]    1    0    0    1    0    0    1"},{"path":"/reference/setup_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sequence of lambda values — setup_lambda","title":"Compute sequence of lambda values — setup_lambda","text":"function allows compute sequence lambda values plmm models.","code":""},{"path":"/reference/setup_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sequence of lambda values — setup_lambda","text":"","code":"setup_lambda(   X,   y,   alpha,   lambda.min,   nlambda,   penalty.factor,   intercept = TRUE )"},{"path":"/reference/setup_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sequence of lambda values — setup_lambda","text":"X Design matrix includes intercept column present. May include clinical covariates non-SNP data. y Continuous outcome vector. alpha Tuning parameter Mnet estimator controls relative contributions MCP/SCAD penalty ridge, L2 penalty. alpha=1 equivalent MCP/SCAD penalty, alpha=0 equivalent ridge regression. However, alpha=0 supported; alpha may arbitrarily small, exactly 0. lambda.min smallest value lambda, fraction lambda.max. Default .001 number observations larger number covariates .05 otherwise. value lambda.min = 0 supported. nlambda desired number lambda values sequence generated. penalty.factor multiplicative factor penalty applied coefficient. supplied, penalty.factor must numeric vector length equal number columns X. purpose penalty.factor apply differential penalization coefficients thought likely others model. particular, penalty.factor can 0, case coefficient always model without shrinkage. intercept Logical: X contain intercept column? Defaults TRUE.","code":""},{"path":"/reference/setup_lambda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute sequence of lambda values — setup_lambda","text":"","code":"RRM <- relatedness_mat(X = scale(admix$X)) fit <- plmm_lasso(X = admix$X, y = admix$y, K = RRM, p1 = 10) (setup_lambda(admix$X, admix$y, alpha = 0.1, nlambda = 10,  penalty.factor = fit$penalty.factor)) # use default lambda.min #> Error in x[, ii]: subscript out of bounds"},{"path":"/reference/sim_environ_eff.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a vector of environmental confounding effects — sim_environ_eff","title":"Simulate a vector of environmental confounding effects — sim_environ_eff","text":"function allows simulate environmental confounding effect. used sim_ps_dat(), scales generated vector order comply user specified desired variance outcome attributable environmental effect.","code":""},{"path":"/reference/sim_environ_eff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a vector of environmental confounding effects — sim_environ_eff","text":"","code":"sim_environ_eff(structureGamma, J)"},{"path":"/reference/sim_environ_eff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a vector of environmental confounding effects — sim_environ_eff","text":"structureGamma character argument describing desired structure. J Number subpopulations.","code":""},{"path":"/reference/sim_environ_eff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a vector of environmental confounding effects — sim_environ_eff","text":"","code":"sim_environ_eff(structureGamma = \"linear_concordant\", J = 3) #> [1] 3 2 1"},{"path":"/reference/sim_ps_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data with population structure — sim_ps_dat","title":"Simulate data with population structure — sim_ps_dat","text":"function allows simulate structured genetic data (SNP) unobserved environmental confounding effect.","code":""},{"path":"/reference/sim_ps_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data with population structure — sim_ps_dat","text":"","code":"sim_ps_dat(   n = 200,   p = 1000,   p1 = floor(p/2),   nJ = rep(50, 4),   structureX = \"indep_subpops\",   Fst = NULL,   inbr = \"heterogeneous\",   structureGamma = c(\"dichotomous_discordant\"),   eta = 0.8,   xi = 0,   standardizeX = TRUE,   structureX_other = NULL,   sampleCols = TRUE,   B0 )"},{"path":"/reference/sim_ps_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data with population structure — sim_ps_dat","text":"n Number observations/samples simulate. Defaults 200. p Number SNPs simulate. Defaults 1000. p1 Number SNPs causal. Defaults floor(p/2). nJ Number observations subpopulation. length nJ corresponds number subpopulations. Defaults rep(50, 4). structureX Type structure simulate. Defaults indep_subpops. Fst desired final FST admixed individuals. Ranges 0 1. high FST implies greater differentiation among populations. Defaults 0.1 structureX = 1d_linear 0.2 structureX = indep_subpops. Otherwise defaults NULL. inbr Indicates whether desired inbreeding homogeneous heterogeneous. Defaults heterogeneous. structureGamma desired structure environmental confounding effect. Defaults 'dichotomous_discordant' eta desired proportion variance outcome attributable causal SNP effects. words, SNR. xi desired proportion non-signal variance outcome attributable unobserved environmental confounding effects. standardizeX generated X matrix standardized? Defaults TRUE. structureX_other structureX == \"\", matrix SnpMatrix object subjects rows SNPs columns used generate pseudophenotypes must supplied . sampleCols logical flag whether columns resultant X matrix scrambled. may desirable causal SNPs change one simulation next. Defaults TRUE. B0 Optional. Additional intercept value.","code":""},{"path":"/reference/sim_ps_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data with population structure — sim_ps_dat","text":"list 7 elements: matrix SNP data (X), single-column matrix outcome values (y), single column matrix 'env', vector coefficients (beta), matrix Z values allocating environmental effects among subjects (Z), vector numeric values representing environmental effects (gamma), type structure used SNP data (structureX)","code":""},{"path":"/reference/sim_ps_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data with population structure — sim_ps_dat","text":"","code":"sim_dat <- sim_ps_dat(structureX = \"1d_linear\") example_fit <- plmm(sim_dat$X, sim_dat$y, K = sim_dat$X%*%t(sim_dat$X))"},{"path":"/reference/sim_ps_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate an X matrix with population structure — sim_ps_x","title":"Simulate an X matrix with population structure — sim_ps_x","text":"function allows simulate structured genetic data (SNP).","code":""},{"path":"/reference/sim_ps_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate an X matrix with population structure — sim_ps_x","text":"","code":"sim_ps_x(   n,   nJ,   p,   structureX = c(\"admixture\", \"indep_subpops\", \"1d_linear\", \"1d_circular\", \"independent\",     \"other\"),   Fst = NULL,   inbr = c(\"homogeneous\", \"heterogeneous\"),   standardizeX = TRUE,   plot = FALSE,   structureX_other = NULL,   sampleCols = TRUE )"},{"path":"/reference/sim_ps_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate an X matrix with population structure — sim_ps_x","text":"n Number observations/samples simulate. nJ Number observations subpopulation. length nJ corresponds number subpopulations. p Number SNPs simulate. structureX Type structure simulate. Fst desired final FST admixed individuals. Ranges 0 1. high Fst implies greater differentiation among populations. Defaults 0.1 structureX = 1d_linear 0.2 structureX = indep_subpops. Otherwise defaults NULL. inbr Indicates whether desired inbreeding homogeneous heterogeneous. Defaults heterogeneous. standardizeX generated X matrix standardized? Defaults TRUE. plot plot kinship matrix generated? Defaults FALSE. structureX_other structureX == \"\", matrix SnpMatrix object subjects rows SNPs columns used generate pseudophenotypes must supplied . sampleCols logical flag whether columns resultant X matrix scrambled. may desirable causal SNPs change one simulation next. Defaults TRUE.","code":""},{"path":"/reference/sim_ps_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate an X matrix with population structure — sim_ps_x","text":"","code":"sim_X <- sim_ps_x(n = 200,  nJ = rep(100, 2),  p = 1000,   structureX = \"indep_subpops\",   inbr = \"heterogeneous\")"},{"path":"/reference/summary.cv.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"A summary function for cv.plmm objects — summary.cv.plmm","title":"A summary function for cv.plmm objects — summary.cv.plmm","text":"summary function cv.plmm objects","code":""},{"path":"/reference/summary.cv.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A summary function for cv.plmm objects — summary.cv.plmm","text":"","code":"# S3 method for cv.plmm summary(obj, lambda = \"min\")"},{"path":"/reference/summary.cv.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A summary function for cv.plmm objects — summary.cv.plmm","text":"obj cv.plmm object lambda regularization parameter value inference reported. Can choose numeric value, 'min', '1se'. Defaults 'min.'","code":""},{"path":"/reference/summary.cv.plmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A summary function for cv.plmm objects — summary.cv.plmm","text":"return value object S3 class summary.cv.plmm. class print method contains following list elements: lambda.min: lambda value minimum cross validation error lambda.1se: maximum lambda value within 1 standard error minimum cross validation error nvars: number non-zero coefficients selected lambda value cve: cross validation error folds min: minimum cross validation error fit: plmm fit used cross validation bias: mean bias cross validation loss: loss (fold?) TODO: double-check ","code":""},{"path":"/reference/summary.cv.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A summary function for cv.plmm objects — summary.cv.plmm","text":"","code":"cv_fit <- cv.plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used #> Warning: the condition has length > 1 and only the first element will be used s <- summary.cv.plmm(cv_fit) #> Error in summary.cv.plmm(cv_fit): could not find function \"summary.cv.plmm\" print.summary.cv.plmm(s) #> Error in print.summary.cv.plmm(s): could not find function \"print.summary.cv.plmm\""},{"path":"/reference/summary.plmm.html","id":null,"dir":"Reference","previous_headings":"","what":"A summary method for the plmm objects — summary.plmm","title":"A summary method for the plmm objects — summary.plmm","text":"summary method plmm objects","code":""},{"path":"/reference/summary.plmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A summary method for the plmm objects — summary.plmm","text":"","code":"# S3 method for plmm summary(object, lambda, idx, eps = 1e-05)"},{"path":"/reference/summary.plmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A summary method for the plmm objects — summary.plmm","text":"object object class plmm lambda regularization parameter value inference reported. idx Alternatively, lambda may specified index; idx=10 means: report inference 10th value lambda along regularization path. lambda idx specified, lambda takes precedence. eps lambda given, eps tolerance difference given lambda value lambda value object. Defaults 0.0001 (1e-5)","code":""},{"path":"/reference/summary.plmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A summary method for the plmm objects — summary.plmm","text":"return value object S3 class summary.plmm. class print method contains following list elements: penalty: penalty used plmm (e.g. SCAD, MCP, lasso) n: Number instances/observations p: Number regression coefficients (including intercept) converged: Logical indicator whether model converged lambda: lambda value inference reported lambda_char: formatted character string indicating lambda value nvars: number nonzero coefficients (, including intercept) value lambda nonzero: column names indicating nonzero coefficients model specified value lambda constant_features: character vector names columns design matrix whose values constant whole sample (e.g., monomorphic SNPs genetics context)","code":""},{"path":"/reference/summary.plmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A summary method for the plmm objects — summary.plmm","text":"","code":"fit <- plmm(X = admix$X, y = admix$y, K = relatedness_mat(admix$X)) s1 <- summary(fit, idx = 97) s2 <- summary(fit, lambda = 0.0005957590)"},{"path":"/reference/unscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Unscale coefficient values — unscale","title":"Unscale coefficient values — unscale","text":"function allows unscale coefficient values based attributes X.","code":""},{"path":"/reference/unscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unscale coefficient values — unscale","text":"","code":"unscale(b, X, scaled_X, intercept = TRUE)"},{"path":"/reference/unscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unscale coefficient values — unscale","text":"b p x nlambda matrix standardized coefficient path values. X Unscaled, rotated design matrix intercept column present. Necessary properly defining dimensions beta cases singular columns present. scaled_X Scaled, rotated design matrix. Must include attributes 'center', 'scale', 'nonsingular' corresponding non-intercept variables. intercept Logical flag whether intercept row included b, , coefficient accounts mean original y value rotated scale.","code":""},{"path":"/reference/unscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unscale coefficient values — unscale","text":"","code":"admix$K <- (admix$X%*%t(admix$X))/ncol(admix$X) # create an estimated covariance matrix  fit <- plmm(X = admix$X, y = admix$y, K = admix$K) unscaled_betas <- unscale(b = fit$beta, X = admix$X, scaled_X = fit$SUX, intercept = TRUE)"},{"path":"/reference/unstandardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Unstandardize coefficient values — unstandardize","title":"Unstandardize coefficient values — unstandardize","text":"function allows unstandardize coefficient values based attributes X.","code":""},{"path":"/reference/unstandardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unstandardize coefficient values — unstandardize","text":"","code":"unstandardize(b, X, std_X, intercept = TRUE)"},{"path":"/reference/unstandardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unstandardize coefficient values — unstandardize","text":"b p x nlambda matrix standardized coefficient path values. X Original, non-standardized design matrix without intercept column. Necessary properly defining dimensions beta cases singular columns present. std_X Standardized design matrix. Must include attributes 'center', 'scale', 'nonsingular' corresponding non-intercept variables. intercept Logical flag whether intercept row included b, , coefficient accounts mean original y value rotated scale.","code":""},{"path":"/reference/unstandardize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unstandardize coefficient values — unstandardize","text":"","code":"admix$K <- (admix$X%*%t(admix$X))/ncol(admix$X) # create an estimated covariance matrix  fit <- plmm(X = admix$X, y = admix$y, K = admix$K) # TODO: this throws an error: new_betas <- unstandardize(b = fit$beta, X = admix$X, std_X = scale(admix$X))"},{"path":"/reference/untransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform coefficient values back to the original scale — untransform","title":"Untransform coefficient values back to the original scale — untransform","text":"function unwinds steps standardization process obtain coefficient values original scale. called plmm().","code":""},{"path":"/reference/untransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform coefficient values back to the original scale — untransform","text":"","code":"untransform(res_b, ns, X, std_X, SUX, std_SUX)"},{"path":"/reference/untransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform coefficient values back to the original scale — untransform","text":"res_b values returned 'beta' argument ncvfit() object ns indices non-singular columns ORIGINAL design matrix X original design matrix (intercept) std_X standardized design matrix rotation; attributes 'scale', 'center', 'nonsingular' SUX rotated design matrix (intercept) std_SUX standardized design matrix rotation; attribute 'scale'","code":""},{"path":"/reference/varp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the population variance — varp","title":"Calculate the population variance — varp","text":"function allows calculate population variance; assume sample population.","code":""},{"path":"/reference/varp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the population variance — varp","text":"","code":"varp(x)"},{"path":"/reference/varp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the population variance — varp","text":"x numeric vector","code":""},{"path":"/reference/varp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the population variance — varp","text":"","code":"v <- rnorm(5) varp(v) #> [1] 1.508164"}]
